openapi: 3.0.3
info:
  title: Library Management API
  version: 1.0.0
  description: Documentation of API endpoints of Library Management
paths:
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/password-reset/:
    post:
      operationId: auth_password_reset_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/password-reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/password-reset/validate/:
    get:
      operationId: auth_password_reset_validate_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegister'
          description: ''
  /api/authors/:
    get:
      operationId: authors_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: library
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - authors
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthorList'
          description: ''
  /api/authors/{id}/:
    get:
      operationId: authors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /api/books/:
    get:
      operationId: books_list
      parameters:
      - in: query
        name: author
        schema:
          type: string
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: library
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - books
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookList'
          description: ''
  /api/books/{id}/:
    get:
      operationId: books_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/borrow/:
    get:
      operationId: borrow_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - borrow
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBorrowingTransactionCreateList'
          description: ''
    post:
      operationId: borrow_create
      tags:
      - borrow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingTransactionCreate'
          description: ''
  /api/borrow/{id}/:
    get:
      operationId: borrow_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrowing transaction.
        required: true
      tags:
      - borrow
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingTransactionCreate'
          description: ''
    put:
      operationId: borrow_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrowing transaction.
        required: true
      tags:
      - borrow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingTransactionCreate'
          description: ''
    patch:
      operationId: borrow_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrowing transaction.
        required: true
      tags:
      - borrow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBorrowingTransactionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBorrowingTransactionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBorrowingTransactionCreate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingTransactionCreate'
          description: ''
    delete:
      operationId: borrow_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrowing transaction.
        required: true
      tags:
      - borrow
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/borrow/{id}/return/:
    post:
      operationId: borrow_return_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrowing transaction.
        required: true
      tags:
      - borrow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BorrowingTransactionCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowingTransactionCreate'
          description: ''
  /api/libraries/:
    get:
      operationId: libraries_list
      parameters:
      - in: query
        name: author
        schema:
          type: string
      - in: query
        name: category
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - libraries
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLibraryList'
          description: ''
  /api/libraries/{id}/:
    get:
      operationId: libraries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this library.
        required: true
      tags:
      - libraries
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
          description: ''
  /api/loaded-authors/:
    get:
      operationId: loaded_authors_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: library
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - loaded-authors
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoadedAuthorList'
          description: ''
  /api/loaded-authors/{id}/:
    get:
      operationId: loaded_authors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - loaded-authors
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadedAuthor'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        bio:
          type: string
        birth_date:
          type: string
          format: date
          nullable: true
        book_count:
          type: integer
          readOnly: true
      required:
      - book_count
      - first_name
      - id
      - last_name
    AuthorName:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
      required:
      - full_name
      - id
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 300
        isbn:
          type: string
          maxLength: 13
        authors:
          type: array
          items:
            $ref: '#/components/schemas/AuthorName'
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryName'
          readOnly: true
        library:
          allOf:
          - $ref: '#/components/schemas/LibraryName'
          readOnly: true
        publication_year:
          type: integer
          maximum: 2025
          minimum: 1000
        available_copies:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_copies:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_available:
          type: string
          readOnly: true
      required:
      - authors
      - category
      - id
      - is_available
      - isbn
      - library
      - publication_year
      - title
    BookNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 300
        isbn:
          type: string
          maxLength: 13
        library:
          allOf:
          - $ref: '#/components/schemas/LibraryName'
          readOnly: true
        publication_year:
          type: integer
          maximum: 2025
          minimum: 1000
        available_copies:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_copies:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_available:
          type: string
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryName'
          readOnly: true
      required:
      - category
      - id
      - is_available
      - isbn
      - library
      - publication_year
      - title
    BorrowingTransactionCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        books:
          type: array
          items:
            type: integer
        expected_return_date:
          type: string
          format: date
      required:
      - books
      - expected_return_date
      - id
    CategoryName:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    Library:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        address:
          type: string
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        phone:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        created_at:
          type: string
          format: date-time
          readOnly: true
        book_count:
          type: integer
          readOnly: true
        distance:
          type: number
          format: double
          readOnly: true
      required:
      - address
      - book_count
      - created_at
      - distance
      - id
      - latitude
      - longitude
      - name
    LibraryName:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
      required:
      - id
      - name
    LoadedAuthor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        bio:
          type: string
        birth_date:
          type: string
          format: date
          nullable: true
        books:
          type: array
          items:
            $ref: '#/components/schemas/BookNested'
          readOnly: true
      required:
      - books
      - first_name
      - id
      - last_name
    PaginatedAuthorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Author'
    PaginatedBookList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    PaginatedBorrowingTransactionCreateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BorrowingTransactionCreate'
    PaginatedLibraryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Library'
    PaginatedLoadedAuthorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LoadedAuthor'
    PatchedBorrowingTransactionCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        books:
          type: array
          items:
            type: integer
        expected_return_date:
          type: string
          format: date
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UserRegister:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        name:
          type: string
          title: Name of User
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - email
      - password
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
